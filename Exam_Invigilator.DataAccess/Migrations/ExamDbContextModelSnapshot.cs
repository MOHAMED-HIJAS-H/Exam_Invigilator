// <auto-generated />
using Exam_Invigilator.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Exam_Invigilator.DataAccess.Migrations
{
    [DbContext(typeof(ExamDbContext))]
    partial class ExamDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Exam_Invigilator.Domain.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "admin123",
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Exam_Invigilator.Domain.Models.Allocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("InvigilatorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<int>("VenueId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvigilatorId");

                    b.HasIndex("VenueId");

                    b.ToTable("Allocations");
                });

            modelBuilder.Entity("Exam_Invigilator.Domain.Models.Availability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("InvigilatorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvigilatorId");

                    b.ToTable("Availabilities");
                });

            modelBuilder.Entity("Exam_Invigilator.Domain.Models.Invigilator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Invigilators");
                });

            modelBuilder.Entity("Exam_Invigilator.Domain.Models.Venue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HallNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Venues");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HallNumber = "H1",
                            Name = "Block A"
                        },
                        new
                        {
                            Id = 4,
                            HallNumber = "H2",
                            Name = "Block B"
                        },
                        new
                        {
                            Id = 2,
                            HallNumber = "H3",
                            Name = "Block C"
                        },
                        new
                        {
                            Id = 3,
                            HallNumber = "H4",
                            Name = "Block D"
                        });
                });

            modelBuilder.Entity("Exam_Invigilator.Domain.Models.Allocation", b =>
                {
                    b.HasOne("Exam_Invigilator.Domain.Models.Invigilator", "Invigilator")
                        .WithMany()
                        .HasForeignKey("InvigilatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Exam_Invigilator.Domain.Models.Venue", "Venue")
                        .WithMany()
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invigilator");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("Exam_Invigilator.Domain.Models.Availability", b =>
                {
                    b.HasOne("Exam_Invigilator.Domain.Models.Invigilator", "Invigilator")
                        .WithMany("Availabilities")
                        .HasForeignKey("InvigilatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Invigilator");
                });

            modelBuilder.Entity("Exam_Invigilator.Domain.Models.Invigilator", b =>
                {
                    b.Navigation("Availabilities");
                });
#pragma warning restore 612, 618
        }
    }
}
